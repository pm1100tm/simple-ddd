spring:
  application:
    name: "SpringBoot-JPA-Prac"
  profiles:
    active: default
  datasource:
    url: jdbc:${db.engine}://${db.host}:${db.port}/${db.dbname}
    username: ${db.username}
    password: ${db.password}
    driver-class-name: ${db.driver-class-name}
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate #validate create
    properties:
      hibernate.format_sql: true
      hibernate:
        globally_quoted_identifiers: true
        create_empty_composites:
          enabled: true
      dialect: org.hibernate.dialect.PostgreSQLDialect
      hbm2ddl:
        import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
      format_sql: true
      show-sql:
        use_sql_comments: true
        use_jdbc_metadata_defaults: true
    show-sql: true

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 50MB

  flyway:
    enabled: true
    create-schemas: true
    baseline-on-migrate: true
    baseline-version: 0
    out-of-order: true
    locations: classpath:db/migration

logging:
  level:
    org.hibernate.SQL: TRACE
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

server:
  port: 8080

# healthcheck
# 확인방법1: curl -X GET http://localhost:8080/actuator/health
# 확인방법2: http://localhost:8080/actuator/health
management:
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

---
# active profile - dev 에 따른 환경변수 주입
spring:
  config:
    activate:
      on-profile: dev
    import:
      - classpath:parameters/dev/db.yml
      - classpath:parameters/dev/jwt.yml

---
# active profile - local 에 따른 환경변수 주입
spring:
  config:
    activate:
      on-profile: local
    import:
      - classpath:parameters/local/db.yml
      - classpath:parameters/local/jwt.yml
