plugins {
    id 'java' // 자바 애플리케이션 빌드를 위한 플러그인
    id 'org.springframework.boot' version '3.4.2' // Spring Boot 플러그인: 스프링 부트 애플리케이션 실행 및 설정 지원
    id 'io.spring.dependency-management' version '1.1.7' // 의존성 관리를 쉽게 해주는 Spring 플러그인
    id 'groovy' // Groovy 플러그인: Spock 테스트를 위해 필요
}

group = 'com.post'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        // Java 21 사용
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    // Maven Central 저장소 사용
    mavenCentral()
}

ext {
    // 각 라이브러리 버전 설정 (중앙에서 관리)
    set('jwtVersion', '0.12.6') // JWT(Json Web Token) 라이브러리 버전
    set('flywayVersion', '11.1.0') // Flyway 라이브러리 버전
    set('springdocVersion', '2.6.0') // SpringDoc (Swagger UI) 라이브러리 버전
}

dependencies {
    // Spring Boot 기본 스타터
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web' // Spring Boot Starter Web: REST API, 내장 톰캣 등을 제공합니다.
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // Spring Boot Starter Data JPA: JPA/Hibernate를 통한 데이터베이스 연동을 지원합니다.
    implementation 'org.springframework.boot:spring-boot-starter-validation' // Bean Validation
    implementation 'org.springframework.boot:spring-boot-starter-security' // Spring Security
    implementation "org.flywaydb:flyway-core:${flywayVersion}" // 데이터베이스 마이그레이션 도구 Flyway
    implementation "io.jsonwebtoken:jjwt-api:${jwtVersion}"
    implementation 'org.json:json:20240303'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}" // Swagger UI를 위한 SpringDoc

    // 런타임 전용 의존성
    runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator' // Actuator 엔드포인트
    runtimeOnly 'org.postgresql:postgresql' // PostgreSQL 드라이버
    runtimeOnly 'com.h2database:h2' // H2 데이터베이스 (테스트용)
    runtimeOnly "org.flywaydb:flyway-database-postgresql:${flywayVersion}" // PostgreSQL용 Flyway 지원
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtVersion}" // JWT 구현
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jwtVersion}" // JWT 와 Jackson 통합

    // 컴파일 전용 의존성
    compileOnly 'org.projectlombok:lombok' // Lombok (코드 생성 도구)

    // 개발 전용 도구
    developmentOnly 'org.springframework.boot:spring-boot-devtools' // (Spring DevTools)
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose' // (docker compose)

    annotationProcessor 'org.projectlombok:lombok' // Lombok annotation processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0' // Spock 프레임워크 (Groovy 기반)
    testImplementation 'org.spockframework:spock-spring:2.3-groovy-3.0' // Spock 프레임워크 (Groovy 기반)
}

// build 후 jar 파일명, 위치 설정 커스텀
tasks.named("bootJar") {
    archiveBaseName.set("PRAC-DDD-JPA")     // JAR 파일명 변경
    archiveVersion.set(version)             // 버전 변경
    archiveFileName.set("prac-jpa-${version}.jar") // 최종 파일명 설정
    destinationDirectory.set(layout.buildDirectory.dir("libs")) // JAR 파일 생성 위치 변경
}

tasks.named('test') {
    useJUnitPlatform() // JUnit 플랫폼 사용
}
